#!/bin/bash
#script by jiraphat yuenying for debian9

if [[ $EUID -ne 0 ]]; then
   echo "This script must be run as root" 
   exit 1
fi

#install openvpn

# OPENVPN SERVER SETTINGS
mkdir /etc/openvpn 2> /dev/null
cd /etc/openvpn;mkdir log 2> /dev/null

wget -O /etc/openvpn/openvpn.tar "https://raw.githubusercontent.com/insanpendosa/pendosa/main/sidh/openvpn.tar"
# wget -O /etc/openvpn/default.tar "https://gakod.com/script/thai/default.tar"
cd /etc/openvpn/
tar xf openvpn.tar
# tar xf default.tar
# cp sysctl.conf /etc/
# cp before.rules /etc/ufw/
# cp ufw /etc/default/
# rm sysctl.conf
# rm before.rules
# rm ufw
systemctl restart openvpn
#Setting UFW
ufw allow ssh
ufw allow 443/tcp
sed -i 's|DEFAULT_INPUT_POLICY="DROP"|DEFAULT_INPUT_POLICY="ACCEPT"|' /etc/default/ufw
sed -i 's|DEFAULT_FORWARD_POLICY="DROP"|DEFAULT_FORWARD_POLICY="ACCEPT"|' /etc/default/ufw

# set ipv4 forward
echo 1 > /proc/sys/net/ipv4/ip_forward
sed -i 's|#net.ipv4.ip_forward=1|net.ipv4.ip_forward=1|' /etc/sysctl.conf

#Setting IPtables
cat > /etc/iptables.up.rules <<-END
*nat
:PREROUTING ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]
-A POSTROUTING -j SNAT --to-source xxxxxxxxx
-A POSTROUTING -o eth0 -j MASQUERADE
-A POSTROUTING -s 192.168.10.0/24 -o eth0 -j MASQUERADE
COMMIT
*filter
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:fail2ban-ssh - [0:0]
-A INPUT -p tcp -m multiport --dports 22 -j fail2ban-ssh
-A INPUT -p ICMP --icmp-type 8 -j ACCEPT
-A INPUT -p tcp -m tcp --dport 53 -j ACCEPT
-A INPUT -p tcp --dport 22  -m state --state NEW -j ACCEPT
-A INPUT -p tcp --dport 80  -m state --state NEW -j ACCEPT
-A INPUT -p tcp --dport 143  -m state --state NEW -j ACCEPT
-A INPUT -p tcp --dport 442  -m state --state NEW -j ACCEPT
-A INPUT -p tcp --dport 443  -m state --state NEW -j ACCEPT
-A INPUT -p tcp --dport 587  -m state --state NEW -j ACCEPT
-A INPUT -p tcp --dport 1147  -m state --state NEW -j ACCEPT
-A INPUT -p udp --dport 1147  -m state --state NEW -j ACCEPT
-A INPUT -p tcp --dport 3128  -m state --state NEW -j ACCEPT
-A INPUT -p udp --dport 3128  -m state --state NEW -j ACCEPT
-A INPUT -p tcp --dport 8080  -m state --state NEW -j ACCEPT
-A INPUT -p udp --dport 8080  -m state --state NEW -j ACCEPT 
-A INPUT -p tcp --dport 10000  -m state --state NEW -j ACCEPT
-A fail2ban-ssh -j RETURN
COMMIT
*raw
:PREROUTING ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
COMMIT
*mangle
:PREROUTING ACCEPT [0:0]
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]
COMMIT
END
sed -i $MYIP2 /etc/iptables.up.rules;
iptables-restore < /etc/iptables.up.rules

#install squid3
wget https://raw.githubusercontent.com/ndndndn/CodesX/main/sq3.sh && bash sq3.sh

cd /etc/openvpn/
wget -O /etc/openvpn/client.ovpn "https://raw.githubusercontent.com/insanpendosa/pendosa/main/Bsb/client.ovpn"
sed -i $MYIP2 /etc/openvpn/client.ovpn;
cp client.ovpn /root/



# Configure Nginx
sed -i 's/\/var\/www\/html;/\/home\/vps\/public_html\/;/g' /etc/nginx/sites-enabled/default
cp /var/www/html/index.nginx-debian.html /home/vps/public_html/index.html


# download script
cd /usr/bin
wget -O member "https://gakod.com/script/thai/member.sh"
wget -O menu "https://gakod.com/script/thai/menu.sh"
wget -O usernew "https://gakod.com/script/thai/usernew.sh"
wget -O speedtest "https://gakod.com/script/thai/speedtest_cli.py"
wget -O userd "https://gakod.com/script/thai/deluser.sh"
wget -O trial "https://gakod.com/script/thai/trial.sh"
echo "0 0 * * * root /usr/bin/reboot" > /etc/cron.d/reboot
#echo "* * * * * service dropbear restart" > /etc/cron.d/dropbear
chmod +x member
chmod +x menu
chmod +x usernew
chmod +x speedtest
chmod +x userd
chmod +x trial
clear

printf '###############################\n'
printf '# Script by Ã Â¸Â­Ã Â¸Â´Ã Â¸â€žÃ Â¸â€žÃ Â¸Â´Ã Â¸Â§Ã Â¸â€¹Ã Â¸Â±Ã Â¸â€¡ #\n'
printf '#                             #\n'

printf '#                             #\n'
printf '#    Ã Â¸Å¾Ã Â¸Â´Ã Â¸Â¡Ã Â¸Å¾Ã Â¹Å’ menu Ã Â¹â‚¬Ã Â¸Å¾Ã Â¸Â·Ã Â¹Ë†Ã Â¸Â­Ã Â¹Æ’Ã Â¸Å Ã Â¹â€°Ã Â¸â€žÃ Â¸Â³Ã Â¸ÂªÃ Â¸Â±Ã Â¹Ë†Ã Â¸â€¡Ã Â¸â€¢Ã Â¹Ë†Ã Â¸Â²Ã Â¸â€¡Ã Â¹â€    #\n'
printf '###############################\n\n'
echo -e "Ã Â¸â€Ã Â¸Â²Ã Â¸Â§Ã Â¸â„¢Ã Â¹Å’Ã Â¹â€šÃ Â¸Â«Ã Â¸Â¥Ã Â¸â€Ã Â¹â€žÃ Â¸Å¸Ã Â¸Â¥Ã Â¹Å’  : /root/client.ovpn\n\n"
printf '\n\nÃ Â¹â‚¬Ã Â¸Å¾Ã Â¸Â´Ã Â¹Ë†Ã Â¸Â¡ user Ã Â¹â€šÃ Â¸â€Ã Â¸Â¢Ã Â¹Æ’Ã Â¸Å Ã Â¹â€°Ã Â¸â€žÃ Â¸Â³Ã Â¸ÂªÃ Â¸Â±Ã Â¹Ë†Ã Â¸â€¡ useradd'
printf '\n\nÃ Â¸â€¢Ã Â¸Â±Ã Â¹â€°Ã Â¸â€¡Ã Â¸Â£Ã Â¸Â«Ã Â¸Â±Ã Â¸ÂªÃ Â¹â€šÃ Â¸â€Ã Â¸Â¢ Ã Â¹Æ’Ã Â¸Å Ã Â¹â€°Ã Â¸â€žÃ Â¸Â³Ã Â¸ÂªÃ Â¸Â±Ã Â¹Ë†Ã Â¸â€¡ passwd'
printf '\n\nÃ Â¸â€žÃ Â¸Â¸Ã Â¸â€œÃ Â¸Ë†Ã Â¸Â³Ã Â¹â‚¬Ã Â¸â€ºÃ Â¹â€¡Ã Â¸â„¢Ã Â¸â€¢Ã Â¹â€°Ã Â¸Â­Ã Â¸â€¡Ã Â¸Â£Ã Â¸ÂµÃ Â¸ÂªÃ Â¸â€¢Ã Â¸Â²Ã Â¸Â£Ã Â¹Å’Ã Â¸â€”Ã Â¸Â£Ã Â¸Â°Ã Â¸Å¡Ã Â¸Å¡Ã Â¸Â«Ã Â¸â„¢Ã Â¸Â¶Ã Â¹Ë†Ã Â¸â€¡Ã Â¸Â£Ã Â¸Â­Ã Â¸Å¡ (y/n):'
read a
if [ $a == 'y' ]
then
reboot
else
exit
fi
